parameters:
  maybe: false

framework:
  # Why doesn't this work?
  # Causes: Invalid type for path "framework.test". Expected boolean, but got string.
#  test: %env(MAYBE)%
  # But this works? From a user perspective, that's weird.
#  test: %maybe%

  # Similarily, why can't I do this?
  # Causes: Invalid type for path "framework.session.metadata_update_threshold". Expected int, but got string.
#  session:
#    metadata_update_threshold: %env(METADATA_THRESHOLD)%

security:
  encoders:
    envbased:
      # Looks like it's working, but in reality, this will always give you a
      # MessageDigestPasswordEncoder which may or may not work.
      algorithm: %env(SECURITY_ALGO)%

monolog:
  handlers:
    elasticsearch:
      type:   elasticsearch
      elasticsearch:
        host: %env(ES_HOST)%
    #    # These ones are interesting, because they simply do not work, but you won't find out with an error on compile.
    #    # The extension base64 encodes the user and pass, so there are no errors, at least
    #    # not until you get a 403 from ES.
        user: %env(ES_USER)%
        password: %env(ES_PASS)%

swiftmailer:
  mailers:
    something:
      # Now we're getting in to some weird shit. No errors on compile.
      # 766411d87e0b18188901e6a45a27b583fa5e276289e6040061352d31ee1d705f_1 gets registered as a
      # service in the DIC, but it seems like it will use SMTP with 127.0.0.1 as the server?
      # Really weird behavior. Could even work in a local dev env, but fail in prod.
      url: %env(MAILER_URL)%
